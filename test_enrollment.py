#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import os
import sys
import glob
from autheticate import SecureVoiceAuthSystem

def test_enrollment():
    """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    print("üé§ –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("=" * 50)
    
    # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
    try:
        print("\n1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...")
        auth_system = SecureVoiceAuthSystem(
            model_path="voice_auth_improved_model.pth"
        )
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª 'voice_auth_improved_model.pth' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ main.py –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏")
        return False
    
    # 2. –ü–æ–∏—Å–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
    print("\n2Ô∏è‚É£ –ü–æ–∏—Å–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤...")
    
    # –ò—â–µ–º —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    test_dirs = ["full_data", "processed_data", "data"]
    audio_files = []
    
    for test_dir in test_dirs:
        if os.path.exists(test_dir):
            files = glob.glob(os.path.join(test_dir, "*.wav"))
            if files:
                audio_files = files[:10]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 10 —Ñ–∞–π–ª–æ–≤
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(files)} –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤ –≤ {test_dir}")
                break
    
    if not audio_files:
        print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        print("–û–∂–∏–¥–∞–µ–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:", test_dirs)
        return False
    
    # 3. –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(f"\n3Ô∏è‚É£ –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    test_user = "test_user_001"
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3-5 —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    enrollment_files = audio_files[:min(5, len(audio_files))]
    print(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º {len(enrollment_files)} —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")
    for i, file in enumerate(enrollment_files, 1):
        print(f"  {i}. {os.path.basename(file)}")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        success = auth_system.enroll_user(test_user, enrollment_files)
        
        if success:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_user} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
        else:
            print(f"‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user} –Ω–µ —É–¥–∞–ª–∞—Å—å")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        return False
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    print(f"\n4Ô∏è‚É£ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:")
    
    try:
        stats = auth_system.get_user_stats(test_user)
        if stats:
            print(f"  üë§ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {stats['user_id']}")
            print(f"  üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {stats['enrolled']}")
            print(f"  üîê –ü–æ—Å–ª–µ–¥–Ω—è—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: {stats['last_auth']}")
            print(f"  üìä –†–∞–∑–º–µ—Ä —à–∞–±–ª–æ–Ω–∞: {stats['template_shape']}")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    # 5. –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print(f"\n5Ô∏è‚É£ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    try:
        users = auth_system.list_users()
        print(f"  –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        for user in users:
            print(f"  - {user}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
    
    # 6. –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    print(f"\n6Ô∏è‚É£ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    
    if len(audio_files) > len(enrollment_files):
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        test_file = audio_files[len(enrollment_files)]
        print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ñ–∞–π–ª–æ–º: {os.path.basename(test_file)}")
        
        try:
            success, similarity, message = auth_system.authenticate_user(
                test_user, test_file
            )
            
            print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—Ö' if success else '‚ùå –ù–µ—É–¥–∞—á–∞'}")
            print(f"  –°—Ö–æ–¥—Å—Ç–≤–æ: {similarity:.3f}")
            print(f"  –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
            
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
    else:
        print("  ‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    
    print(f"\n7Ô∏è‚É£ –¢–µ—Å—Ç –∑–∞—â–∏—Ç—ã –æ—Ç —Å–ø—É—Ñ–∏–Ω–≥–∞...")
    try:
        challenge, token = auth_system.generate_challenge(test_user)
        print(f"  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–∑–æ–≤: '{challenge}'")
        print(f"  –¢–æ–∫–µ–Ω: {token[:16]}...")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã–∑–æ–≤–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
    print("=" * 50)
    
    return True

def cleanup_test_user():
    """–£–¥–∞–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        auth_system = SecureVoiceAuthSystem(
            model_path="voice_auth_improved_model.pth"
        )
        
        test_user = "test_user_001"
        if auth_system.delete_user(test_user):
            print(f"üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_user} —É–¥–∞–ª–µ–Ω")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
    if not os.path.exists("voice_auth_improved_model.pth"):
        print("‚ùå –§–∞–π–ª –º–æ–¥–µ–ª–∏ 'voice_auth_improved_model.pth' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ main.py –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    success = test_enrollment()
    
    if success:
        print("\n" + "="*50)
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        cleanup = input("\n–£–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? (y/n): ").lower()
        if cleanup in ['y', 'yes', '–¥–∞']:
            cleanup_test_user()
        
    else:
        print("\n" + "="*50)
        print("‚ùå –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º")
    
    print("="*50)